

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 02 14:31:00 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007DCA                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _display
    57  007DCA  003F               	dw	63
    58  007DCC  0006               	dw	6
    59  007DCE  005B               	dw	91
    60  007DD0  004F               	dw	79
    61  007DD2  0066               	dw	102
    62  007DD4  006D               	dw	109
    63  007DD6  007D               	dw	125
    64  007DD8  0007               	dw	7
    65  007DDA  007F               	dw	127
    66  007DDC  0067               	dw	103
    67  007DDE  0076               	dw	118
    68  007DE0  003F               	dw	63
    69  007DE2  0038               	dw	56
    70  007DE4  0077               	dw	119
    71                           
    72                           	psect	nvCOMRAM
    73  00001D                     __pnvCOMRAM:
    74                           	callstack 0
    75  00001D                     _i:
    76                           	callstack 0
    77  00001D                     	ds	2
    78  0000                     _LATAbits	set	3977
    79  0000                     _PORTD	set	3971
    80  0000                     _INTCON2bits	set	4081
    81  0000                     _TRISBbits	set	3987
    82  0000                     _TRISD	set	3989
    83  0000                     _TRISA	set	3986
    84  0000                     _LATD	set	3980
    85  0000                     _LATA	set	3977
    86  0000                     _ADCON1bits	set	4033
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91  007E04                     __pcinit:
    92                           	callstack 0
    93  007E04                     start_initialization:
    94                           	callstack 0
    95  007E04                     __initialization:
    96                           	callstack 0
    97                           
    98                           ; Initialize objects allocated to COMRAM (28 bytes)
    99                           ; load TBLPTR registers with __pidataCOMRAM
   100  007E04  0ECA               	movlw	low __pidataCOMRAM
   101  007E06  6EF6               	movwf	tblptrl,c
   102  007E08  0E7D               	movlw	high __pidataCOMRAM
   103  007E0A  6EF7               	movwf	tblptrh,c
   104  007E0C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   105  007E0E  6EF8               	movwf	tblptru,c
   106  007E10  EE00  F001         	lfsr	0,__pdataCOMRAM
   107  007E14  EE10 F01C          	lfsr	1,28
   108  007E18                     copy_data0:
   109  007E18  0009               	tblrd		*+
   110  007E1A  CFF5 FFEE          	movff	tablat,postinc0
   111  007E1E  50E5               	movf	postdec1,w,c
   112  007E20  50E1               	movf	fsr1l,w,c
   113  007E22  E1FA               	bnz	copy_data0
   114  007E24                     end_of_initialization:
   115                           	callstack 0
   116  007E24                     __end_of__initialization:
   117                           	callstack 0
   118  007E24  0100               	movlb	0
   119  007E26  EF15  F03F         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	dataCOMRAM
   122  000001                     __pdataCOMRAM:
   123                           	callstack 0
   124  000001                     _display:
   125                           	callstack 0
   126  000001                     	ds	28
   127                           
   128                           	psect	cstackCOMRAM
   129  00001F                     __pcstackCOMRAM:
   130                           	callstack 0
   131  00001F                     ??_main:
   132                           
   133                           ; 1 bytes @ 0x0
   134  00001F                     	ds	2
   135                           
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 24 in file "Main_Program.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  1    wreg      void 
   148 ;; Registers used:
   149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : 0/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   155 ;;      Params:         0       0       0       0       0       0       0       0       0
   156 ;;      Locals:         0       0       0       0       0       0       0       0       0
   157 ;;      Temps:          2       0       0       0       0       0       0       0       0
   158 ;;      Totals:         2       0       0       0       0       0       0       0       0
   159 ;;Total ram usage:        2 bytes
   160 ;; Hardware stack levels required when called:    1
   161 ;; This function calls:
   162 ;;		_initPort
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           	psect	text0
   169  007E2A                     __ptext0:
   170                           	callstack 0
   171  007E2A                     _main:
   172                           	callstack 30
   173  007E2A                     
   174                           ;Main_Program.c: 25:     initPort();
   175  007E2A  ECF3  F03E         	call	_initPort	;wreg free
   176  007E2E                     l731:
   177                           
   178                           ;Main_Program.c: 27:             for(i=10;i<14;i++){
   179  007E2E  0E00               	movlw	0
   180  007E30  6E1E               	movwf	(_i+1)^0,c
   181  007E32  0E0A               	movlw	10
   182  007E34  6E1D               	movwf	_i^0,c
   183  007E36                     l737:
   184                           
   185                           ;Main_Program.c: 28:                 PORTD = display[i];
   186  007E36  90D8               	bcf	status,0,c
   187  007E38  341D               	rlcf	_i^0,w,c
   188  007E3A  6ED9               	movwf	fsr2l,c
   189  007E3C  341E               	rlcf	(_i+1)^0,w,c
   190  007E3E  6EDA               	movwf	fsr2h,c
   191  007E40  0E01               	movlw	low _display
   192  007E42  26D9               	addwf	fsr2l,f,c
   193  007E44  0E00               	movlw	high _display
   194  007E46  22DA               	addwfc	fsr2h,f,c
   195  007E48  50DF               	movf	indf2,w,c
   196  007E4A  6E83               	movwf	131,c	;volatile
   197  007E4C                     
   198                           ;Main_Program.c: 29:                 _delay((unsigned long)((500)*(20000000L/4000.0)));
   199  007E4C  0E0D               	movlw	13
   200  007E4E  6E20               	movwf	(??_main+1)^0,c
   201  007E50  0EAF               	movlw	175
   202  007E52  6E1F               	movwf	??_main^0,c
   203  007E54  0EB6               	movlw	182
   204  007E56                     u57:
   205  007E56  2EE8               	decfsz	wreg,f,c
   206  007E58  D7FE               	bra	u57
   207  007E5A  2E1F               	decfsz	??_main^0,f,c
   208  007E5C  D7FC               	bra	u57
   209  007E5E  2E20               	decfsz	(??_main+1)^0,f,c
   210  007E60  D7FA               	bra	u57
   211  007E62  D000               	nop2	
   212  007E64                     
   213                           ;Main_Program.c: 30:             }
   214  007E64  4A1D               	infsnz	_i^0,f,c
   215  007E66  2A1E               	incf	(_i+1)^0,f,c
   216  007E68  BE1E               	btfsc	(_i+1)^0,7,c
   217  007E6A  EF40  F03F         	goto	u11
   218  007E6E  501E               	movf	(_i+1)^0,w,c
   219  007E70  E109               	bnz	u10
   220  007E72  0E0E               	movlw	14
   221  007E74  5C1D               	subwf	_i^0,w,c
   222  007E76  A0D8               	btfss	status,0,c
   223  007E78  EF40  F03F         	goto	u11
   224  007E7C  EF42  F03F         	goto	u10
   225  007E80                     u11:
   226  007E80  EF1B  F03F         	goto	l737
   227  007E84                     u10:
   228  007E84                     
   229                           ;Main_Program.c: 31:             PORTD = display[15];
   230  007E84  C01F  FF83         	movff	_display+30,3971	;volatile
   231  007E88                     
   232                           ;Main_Program.c: 32:             _delay((unsigned long)((500)*(20000000L/4000.0)));
   233  007E88  0E0D               	movlw	13
   234  007E8A  6E20               	movwf	(??_main+1)^0,c
   235  007E8C  0EAF               	movlw	175
   236  007E8E  6E1F               	movwf	??_main^0,c
   237  007E90  0EB6               	movlw	182
   238  007E92                     u67:
   239  007E92  2EE8               	decfsz	wreg,f,c
   240  007E94  D7FE               	bra	u67
   241  007E96  2E1F               	decfsz	??_main^0,f,c
   242  007E98  D7FC               	bra	u67
   243  007E9A  2E20               	decfsz	(??_main+1)^0,f,c
   244  007E9C  D7FA               	bra	u67
   245  007E9E  D000               	nop2	
   246  007EA0                     
   247                           ;Main_Program.c: 33:             for(i=0;i<10;i++){
   248  007EA0  0E00               	movlw	0
   249  007EA2  6E1E               	movwf	(_i+1)^0,c
   250  007EA4  0E00               	movlw	0
   251  007EA6  6E1D               	movwf	_i^0,c
   252  007EA8                     l753:
   253                           
   254                           ;Main_Program.c: 34:                 PORTD = display[i];
   255  007EA8  90D8               	bcf	status,0,c
   256  007EAA  341D               	rlcf	_i^0,w,c
   257  007EAC  6ED9               	movwf	fsr2l,c
   258  007EAE  341E               	rlcf	(_i+1)^0,w,c
   259  007EB0  6EDA               	movwf	fsr2h,c
   260  007EB2  0E01               	movlw	low _display
   261  007EB4  26D9               	addwf	fsr2l,f,c
   262  007EB6  0E00               	movlw	high _display
   263  007EB8  22DA               	addwfc	fsr2h,f,c
   264  007EBA  50DF               	movf	indf2,w,c
   265  007EBC  6E83               	movwf	131,c	;volatile
   266  007EBE                     
   267                           ;Main_Program.c: 35:                 _delay((unsigned long)((500)*(20000000L/4000.0)));
   268  007EBE  0E0D               	movlw	13
   269  007EC0  6E20               	movwf	(??_main+1)^0,c
   270  007EC2  0EAF               	movlw	175
   271  007EC4  6E1F               	movwf	??_main^0,c
   272  007EC6  0EB6               	movlw	182
   273  007EC8                     u77:
   274  007EC8  2EE8               	decfsz	wreg,f,c
   275  007ECA  D7FE               	bra	u77
   276  007ECC  2E1F               	decfsz	??_main^0,f,c
   277  007ECE  D7FC               	bra	u77
   278  007ED0  2E20               	decfsz	(??_main+1)^0,f,c
   279  007ED2  D7FA               	bra	u77
   280  007ED4  D000               	nop2	
   281  007ED6                     
   282                           ;Main_Program.c: 36:             }
   283  007ED6  4A1D               	infsnz	_i^0,f,c
   284  007ED8  2A1E               	incf	(_i+1)^0,f,c
   285  007EDA  BE1E               	btfsc	(_i+1)^0,7,c
   286  007EDC  EF79  F03F         	goto	u21
   287  007EE0  501E               	movf	(_i+1)^0,w,c
   288  007EE2  E109               	bnz	u20
   289  007EE4  0E0A               	movlw	10
   290  007EE6  5C1D               	subwf	_i^0,w,c
   291  007EE8  A0D8               	btfss	status,0,c
   292  007EEA  EF79  F03F         	goto	u21
   293  007EEE  EF7B  F03F         	goto	u20
   294  007EF2                     u21:
   295  007EF2  EF54  F03F         	goto	l753
   296  007EF6                     u20:
   297  007EF6                     
   298                           ;Main_Program.c: 37:             PORTD = display[15];
   299  007EF6  C01F  FF83         	movff	_display+30,3971	;volatile
   300  007EFA                     
   301                           ;Main_Program.c: 38:             _delay((unsigned long)((500)*(20000000L/4000.0)));
   302  007EFA  0E0D               	movlw	13
   303  007EFC  6E20               	movwf	(??_main+1)^0,c
   304  007EFE  0EAF               	movlw	175
   305  007F00  6E1F               	movwf	??_main^0,c
   306  007F02  0EB6               	movlw	182
   307  007F04                     u87:
   308  007F04  2EE8               	decfsz	wreg,f,c
   309  007F06  D7FE               	bra	u87
   310  007F08  2E1F               	decfsz	??_main^0,f,c
   311  007F0A  D7FC               	bra	u87
   312  007F0C  2E20               	decfsz	(??_main+1)^0,f,c
   313  007F0E  D7FA               	bra	u87
   314  007F10  D000               	nop2	
   315  007F12                     
   316                           ;Main_Program.c: 39:             for(i=0;i<10;i++){
   317  007F12  0E00               	movlw	0
   318  007F14  6E1E               	movwf	(_i+1)^0,c
   319  007F16  0E00               	movlw	0
   320  007F18  6E1D               	movwf	_i^0,c
   321  007F1A                     l37:
   322                           
   323                           ;Main_Program.c: 40:                 PORTD = display[9];
   324  007F1A  C013  FF83         	movff	_display+18,3971	;volatile
   325  007F1E                     
   326                           ;Main_Program.c: 41:                 _delay((unsigned long)((500)*(20000000L/4000.0)));
   327  007F1E  0E0D               	movlw	13
   328  007F20  6E20               	movwf	(??_main+1)^0,c
   329  007F22  0EAF               	movlw	175
   330  007F24  6E1F               	movwf	??_main^0,c
   331  007F26  0EB6               	movlw	182
   332  007F28                     u97:
   333  007F28  2EE8               	decfsz	wreg,f,c
   334  007F2A  D7FE               	bra	u97
   335  007F2C  2E1F               	decfsz	??_main^0,f,c
   336  007F2E  D7FC               	bra	u97
   337  007F30  2E20               	decfsz	(??_main+1)^0,f,c
   338  007F32  D7FA               	bra	u97
   339  007F34  D000               	nop2	
   340  007F36                     
   341                           ;Main_Program.c: 42:                 PORTD = display[15];
   342  007F36  C01F  FF83         	movff	_display+30,3971	;volatile
   343                           
   344                           ;Main_Program.c: 43:                 _delay((unsigned long)((500)*(20000000L/4000.0)));
   345  007F3A  0E0D               	movlw	13
   346  007F3C  6E20               	movwf	(??_main+1)^0,c
   347  007F3E  0EAF               	movlw	175
   348  007F40  6E1F               	movwf	??_main^0,c
   349  007F42  0EB6               	movlw	182
   350  007F44                     u107:
   351  007F44  2EE8               	decfsz	wreg,f,c
   352  007F46  D7FE               	bra	u107
   353  007F48  2E1F               	decfsz	??_main^0,f,c
   354  007F4A  D7FC               	bra	u107
   355  007F4C  2E20               	decfsz	(??_main+1)^0,f,c
   356  007F4E  D7FA               	bra	u107
   357  007F50  D000               	nop2	
   358  007F52                     
   359                           ;Main_Program.c: 44:             }
   360  007F52  4A1D               	infsnz	_i^0,f,c
   361  007F54  2A1E               	incf	(_i+1)^0,f,c
   362  007F56  BE1E               	btfsc	(_i+1)^0,7,c
   363  007F58  EFB7  F03F         	goto	u31
   364  007F5C  501E               	movf	(_i+1)^0,w,c
   365  007F5E  E109               	bnz	u30
   366  007F60  0E0A               	movlw	10
   367  007F62  5C1D               	subwf	_i^0,w,c
   368  007F64  A0D8               	btfss	status,0,c
   369  007F66  EFB7  F03F         	goto	u31
   370  007F6A  EFB9  F03F         	goto	u30
   371  007F6E                     u31:
   372  007F6E  EF8D  F03F         	goto	l37
   373  007F72                     u30:
   374  007F72                     
   375                           ;Main_Program.c: 45:              _delay((unsigned long)((500)*(20000000L/4000.0)));
   376  007F72  0E0D               	movlw	13
   377  007F74  6E20               	movwf	(??_main+1)^0,c
   378  007F76  0EAF               	movlw	175
   379  007F78  6E1F               	movwf	??_main^0,c
   380  007F7A  0EB6               	movlw	182
   381  007F7C                     u117:
   382  007F7C  2EE8               	decfsz	wreg,f,c
   383  007F7E  D7FE               	bra	u117
   384  007F80  2E1F               	decfsz	??_main^0,f,c
   385  007F82  D7FC               	bra	u117
   386  007F84  2E20               	decfsz	(??_main+1)^0,f,c
   387  007F86  D7FA               	bra	u117
   388  007F88  D000               	nop2	
   389  007F8A                     
   390                           ;Main_Program.c: 46:             for(i=9;i>=0;i--){
   391  007F8A  0E00               	movlw	0
   392  007F8C  6E1E               	movwf	(_i+1)^0,c
   393  007F8E  0E09               	movlw	9
   394  007F90  6E1D               	movwf	_i^0,c
   395  007F92                     l783:
   396                           
   397                           ;Main_Program.c: 47:                 PORTD = display[i];
   398  007F92  90D8               	bcf	status,0,c
   399  007F94  341D               	rlcf	_i^0,w,c
   400  007F96  6ED9               	movwf	fsr2l,c
   401  007F98  341E               	rlcf	(_i+1)^0,w,c
   402  007F9A  6EDA               	movwf	fsr2h,c
   403  007F9C  0E01               	movlw	low _display
   404  007F9E  26D9               	addwf	fsr2l,f,c
   405  007FA0  0E00               	movlw	high _display
   406  007FA2  22DA               	addwfc	fsr2h,f,c
   407  007FA4  50DF               	movf	indf2,w,c
   408  007FA6  6E83               	movwf	131,c	;volatile
   409  007FA8                     
   410                           ;Main_Program.c: 48:                 _delay((unsigned long)((500)*(20000000L/4000.0)));
   411  007FA8  0E0D               	movlw	13
   412  007FAA  6E20               	movwf	(??_main+1)^0,c
   413  007FAC  0EAF               	movlw	175
   414  007FAE  6E1F               	movwf	??_main^0,c
   415  007FB0  0EB6               	movlw	182
   416  007FB2                     u127:
   417  007FB2  2EE8               	decfsz	wreg,f,c
   418  007FB4  D7FE               	bra	u127
   419  007FB6  2E1F               	decfsz	??_main^0,f,c
   420  007FB8  D7FC               	bra	u127
   421  007FBA  2E20               	decfsz	(??_main+1)^0,f,c
   422  007FBC  D7FA               	bra	u127
   423  007FBE  D000               	nop2	
   424  007FC0                     
   425                           ;Main_Program.c: 49:             }
   426  007FC0  061D               	decf	_i^0,f,c
   427  007FC2  A0D8               	btfss	status,0,c
   428  007FC4  061E               	decf	(_i+1)^0,f,c
   429  007FC6  BE1E               	btfsc	(_i+1)^0,7,c
   430  007FC8  EFEA  F03F         	goto	u40
   431  007FCC  EFE8  F03F         	goto	u41
   432  007FD0                     u41:
   433  007FD0  EFC9  F03F         	goto	l783
   434  007FD4                     u40:
   435  007FD4                     
   436                           ;Main_Program.c: 50:             PORTD = display[15];
   437  007FD4  C01F  FF83         	movff	_display+30,3971	;volatile
   438  007FD8                     
   439                           ;Main_Program.c: 51:             _delay((unsigned long)((500)*(20000000L/4000.0)));
   440  007FD8  0E0D               	movlw	13
   441  007FDA  6E20               	movwf	(??_main+1)^0,c
   442  007FDC  0EAF               	movlw	175
   443  007FDE  6E1F               	movwf	??_main^0,c
   444  007FE0  0EB6               	movlw	182
   445  007FE2                     u137:
   446  007FE2  2EE8               	decfsz	wreg,f,c
   447  007FE4  D7FE               	bra	u137
   448  007FE6  2E1F               	decfsz	??_main^0,f,c
   449  007FE8  D7FC               	bra	u137
   450  007FEA  2E20               	decfsz	(??_main+1)^0,f,c
   451  007FEC  D7FA               	bra	u137
   452  007FEE  D000               	nop2	
   453  007FF0                     
   454                           ;Main_Program.c: 52:             PORTD = 0;
   455  007FF0  0E00               	movlw	0
   456  007FF2  6E83               	movwf	131,c	;volatile
   457  007FF4                     
   458                           ;Main_Program.c: 53:             LATAbits.LA0 = 0;
   459  007FF4  9089               	bcf	137,0,c	;volatile
   460  007FF6                     
   461                           ;Main_Program.c: 54:             LATAbits.LA1 = 0;
   462  007FF6  9289               	bcf	137,1,c	;volatile
   463  007FF8  EF17  F03F         	goto	l731
   464  007FFC  EF00  F000         	goto	start
   465  008000                     __end_of_main:
   466                           	callstack 0
   467                           
   468 ;; *************** function _initPort *****************
   469 ;; Defined at:
   470 ;;		line 12 in file "Main_Program.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   484 ;;      Params:         0       0       0       0       0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text1
   498  007DE6                     __ptext1:
   499                           	callstack 0
   500  007DE6                     _initPort:
   501                           	callstack 30
   502  007DE6                     
   503                           ;Main_Program.c: 13:     ADCON1bits.PCFG = 0xFF;
   504  007DE6  0E0F               	movlw	15
   505  007DE8  12C1               	iorwf	193,f,c	;volatile
   506                           
   507                           ;Main_Program.c: 14:     LATA = 0;
   508  007DEA  0E00               	movlw	0
   509  007DEC  6E89               	movwf	137,c	;volatile
   510                           
   511                           ;Main_Program.c: 15:     LATD = 0;
   512  007DEE  0E00               	movlw	0
   513  007DF0  6E8C               	movwf	140,c	;volatile
   514                           
   515                           ;Main_Program.c: 16:     TRISA = 0;
   516  007DF2  0E00               	movlw	0
   517  007DF4  6E92               	movwf	146,c	;volatile
   518                           
   519                           ;Main_Program.c: 17:     TRISD = 0;
   520  007DF6  0E00               	movlw	0
   521  007DF8  6E95               	movwf	149,c	;volatile
   522  007DFA                     
   523                           ;Main_Program.c: 18:     TRISBbits.RB0 = 1;
   524  007DFA  8093               	bsf	147,0,c	;volatile
   525  007DFC                     
   526                           ;Main_Program.c: 19:     TRISBbits.RB1 = 1;
   527  007DFC  8293               	bsf	147,1,c	;volatile
   528  007DFE                     
   529                           ;Main_Program.c: 20:     TRISBbits.RB4 = 1;
   530  007DFE  8893               	bsf	147,4,c	;volatile
   531  007E00                     
   532                           ;Main_Program.c: 21:     INTCON2bits.RBPU = 0;
   533  007E00  9EF1               	bcf	241,7,c	;volatile
   534  007E02  0012               	return		;funcret
   535  007E04                     __end_of_initPort:
   536                           	callstack 0
   537  0000                     
   538                           	psect	rparam
   539  0000                     
   540                           	psect	idloc
   541                           
   542                           ;Config register IDLOC0 @ 0x200000
   543                           ;	unspecified, using default values
   544  200000                     	org	2097152
   545  200000  FF                 	db	255
   546                           
   547                           ;Config register IDLOC1 @ 0x200001
   548                           ;	unspecified, using default values
   549  200001                     	org	2097153
   550  200001  FF                 	db	255
   551                           
   552                           ;Config register IDLOC2 @ 0x200002
   553                           ;	unspecified, using default values
   554  200002                     	org	2097154
   555  200002  FF                 	db	255
   556                           
   557                           ;Config register IDLOC3 @ 0x200003
   558                           ;	unspecified, using default values
   559  200003                     	org	2097155
   560  200003  FF                 	db	255
   561                           
   562                           ;Config register IDLOC4 @ 0x200004
   563                           ;	unspecified, using default values
   564  200004                     	org	2097156
   565  200004  FF                 	db	255
   566                           
   567                           ;Config register IDLOC5 @ 0x200005
   568                           ;	unspecified, using default values
   569  200005                     	org	2097157
   570  200005  FF                 	db	255
   571                           
   572                           ;Config register IDLOC6 @ 0x200006
   573                           ;	unspecified, using default values
   574  200006                     	org	2097158
   575  200006  FF                 	db	255
   576                           
   577                           ;Config register IDLOC7 @ 0x200007
   578                           ;	unspecified, using default values
   579  200007                     	org	2097159
   580  200007  FF                 	db	255
   581                           
   582                           	psect	config
   583                           
   584                           ;Config register CONFIG1L @ 0x300000
   585                           ;	PLL Prescaler Selection bits
   586                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   587                           ;	System Clock Postscaler Selection bits
   588                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   589                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   590                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   591  300000                     	org	3145728
   592  300000  00                 	db	0
   593                           
   594                           ;Config register CONFIG1H @ 0x300001
   595                           ;	Oscillator Selection bits
   596                           ;	FOSC = HS, HS oscillator (HS)
   597                           ;	Fail-Safe Clock Monitor Enable bit
   598                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   599                           ;	Internal/External Oscillator Switchover bit
   600                           ;	IESO = OFF, Oscillator Switchover mode disabled
   601  300001                     	org	3145729
   602  300001  0C                 	db	12
   603                           
   604                           ;Config register CONFIG2L @ 0x300002
   605                           ;	Power-up Timer Enable bit
   606                           ;	PWRT = ON, PWRT enabled
   607                           ;	Brown-out Reset Enable bits
   608                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   609                           ;	Brown-out Reset Voltage bits
   610                           ;	BORV = 3, Minimum setting 2.05V
   611                           ;	USB Voltage Regulator Enable bit
   612                           ;	VREGEN = OFF, USB voltage regulator disabled
   613  300002                     	org	3145730
   614  300002  18                 	db	24
   615                           
   616                           ;Config register CONFIG2H @ 0x300003
   617                           ;	Watchdog Timer Enable bit
   618                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   619                           ;	Watchdog Timer Postscale Select bits
   620                           ;	WDTPS = 32768, 1:32768
   621  300003                     	org	3145731
   622  300003  1E                 	db	30
   623                           
   624                           ; Padding undefined space
   625  300004                     	org	3145732
   626  300004  FF                 	db	255
   627                           
   628                           ;Config register CONFIG3H @ 0x300005
   629                           ;	CCP2 MUX bit
   630                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   631                           ;	PORTB A/D Enable bit
   632                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   633                           ;	Low-Power Timer 1 Oscillator Enable bit
   634                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   635                           ;	MCLR Pin Enable bit
   636                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   637  300005                     	org	3145733
   638  300005  83                 	db	131
   639                           
   640                           ;Config register CONFIG4L @ 0x300006
   641                           ;	Stack Full/Underflow Reset Enable bit
   642                           ;	STVREN = ON, Stack full/underflow will cause Reset
   643                           ;	Single-Supply ICSP Enable bit
   644                           ;	LVP = OFF, Single-Supply ICSP disabled
   645                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   646                           ;	ICPRT = OFF, ICPORT disabled
   647                           ;	Extended Instruction Set Enable bit
   648                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   649                           ;	Background Debugger Enable bit
   650                           ;	DEBUG = 0x1, unprogrammed default
   651  300006                     	org	3145734
   652  300006  81                 	db	129
   653                           
   654                           ; Padding undefined space
   655  300007                     	org	3145735
   656  300007  FF                 	db	255
   657                           
   658                           ;Config register CONFIG5L @ 0x300008
   659                           ;	Code Protection bit
   660                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   661                           ;	Code Protection bit
   662                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   663                           ;	Code Protection bit
   664                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   665                           ;	Code Protection bit
   666                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   667  300008                     	org	3145736
   668  300008  0F                 	db	15
   669                           
   670                           ;Config register CONFIG5H @ 0x300009
   671                           ;	Boot Block Code Protection bit
   672                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   673                           ;	Data EEPROM Code Protection bit
   674                           ;	CPD = OFF, Data EEPROM is not code-protected
   675  300009                     	org	3145737
   676  300009  C0                 	db	192
   677                           
   678                           ;Config register CONFIG6L @ 0x30000A
   679                           ;	Write Protection bit
   680                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   681                           ;	Write Protection bit
   682                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   683                           ;	Write Protection bit
   684                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   685                           ;	Write Protection bit
   686                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   687  30000A                     	org	3145738
   688  30000A  0F                 	db	15
   689                           
   690                           ;Config register CONFIG6H @ 0x30000B
   691                           ;	Configuration Register Write Protection bit
   692                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   693                           ;	Boot Block Write Protection bit
   694                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   695                           ;	Data EEPROM Write Protection bit
   696                           ;	WRTD = OFF, Data EEPROM is not write-protected
   697  30000B                     	org	3145739
   698  30000B  E0                 	db	224
   699                           
   700                           ;Config register CONFIG7L @ 0x30000C
   701                           ;	Table Read Protection bit
   702                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   703                           ;	Table Read Protection bit
   704                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   705                           ;	Table Read Protection bit
   706                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   707                           ;	Table Read Protection bit
   708                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   709  30000C                     	org	3145740
   710  30000C  0F                 	db	15
   711                           
   712                           ;Config register CONFIG7H @ 0x30000D
   713                           ;	Boot Block Table Read Protection bit
   714                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   715  30000D                     	org	3145741
   716  30000D  40                 	db	64
   717                           tosu	equ	0xFFF
   718                           tosh	equ	0xFFE
   719                           tosl	equ	0xFFD
   720                           stkptr	equ	0xFFC
   721                           pclatu	equ	0xFFB
   722                           pclath	equ	0xFFA
   723                           pcl	equ	0xFF9
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           prodh	equ	0xFF4
   729                           prodl	equ	0xFF3
   730                           indf0	equ	0xFEF
   731                           postinc0	equ	0xFEE
   732                           postdec0	equ	0xFED
   733                           preinc0	equ	0xFEC
   734                           plusw0	equ	0xFEB
   735                           fsr0h	equ	0xFEA
   736                           fsr0l	equ	0xFE9
   737                           wreg	equ	0xFE8
   738                           indf1	equ	0xFE7
   739                           postinc1	equ	0xFE6
   740                           postdec1	equ	0xFE5
   741                           preinc1	equ	0xFE4
   742                           plusw1	equ	0xFE3
   743                           fsr1h	equ	0xFE2
   744                           fsr1l	equ	0xFE1
   745                           bsr	equ	0xFE0
   746                           indf2	equ	0xFDF
   747                           postinc2	equ	0xFDE
   748                           postdec2	equ	0xFDD
   749                           preinc2	equ	0xFDC
   750                           plusw2	equ	0xFDB
   751                           fsr2h	equ	0xFDA
   752                           fsr2l	equ	0xFD9
   753                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                           _initPort
 ---------------------------------------------------------------------------------
 (1) _initPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initPort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2      20       1       33.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      20        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 02 14:31:00 2020

                      _i 001D                       l40 7FD4                       l34 7E84  
                     l27 7E02                       l36 7EF6                       l37 7F1A  
                     u10 7E84                       u11 7E80                       u20 7EF6  
                     u21 7EF2                       u30 7F72                       u31 7F6E  
                     u40 7FD4                       u41 7FD0                       u57 7E56  
                     u67 7E92                       u77 7EC8                       u87 7F04  
                     u97 7F28                      l721 7DFA                      l723 7DFC  
                    l731 7E2E                      l725 7DFE                      l741 7E64  
                    l727 7E00                      l719 7DE6                      l743 7E68  
                    l761 7EFA                      l753 7EA8                      l745 7E88  
                    l737 7E36                      l729 7E2A                      l771 7F36  
                    l763 7F12                      l755 7EBE                      l747 7EA0  
                    l739 7E4C                      l773 7F52                      l757 7ED6  
                    l791 7FD8                      l783 7F92                      l775 7F72  
                    l759 7EDA                      l793 7FF0                      l785 7FA8  
                    l777 7F8A                      l769 7F1E                      l795 7FF4  
                    l787 7FC0                      l797 7FF6                      l789 7FC6  
                    u107 7F44                      u117 7F7C                      u127 7FB2  
                    u137 7FE2                      wreg 000FE8                     _LATA 000F89  
                   _LATD 000F8C                     _main 7E2A                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000                    ?_main 001F  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISD 000F95  
                  tablat 000FF5                    status 000FD8          __initialization 7E04  
           __end_of_main 8000                   ??_main 001F            __activetblptr 000000  
       __end_of_initPort 7E04             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7E24            ___rparam_used 000001           __pcstackCOMRAM 001F  
             __pnvCOMRAM 001D                ?_initPort 001F                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E04                  __ramtop 0800  
                __ptext0 7E2A                  __ptext1 7DE6                  _display 0001  
   end_of_initialization 7E24               ??_initPort 001F                  postdec1 000FE5  
                postinc0 000FEE                _TRISBbits 000F93            __pidataCOMRAM 7DCA  
    start_initialization 7E04        __size_of_initPort 001E                 _LATAbits 000F89  
             _ADCON1bits 000FC1              _INTCON2bits 000FF1                copy_data0 7E18  
               __Hrparam 0000                 __Lrparam 0000                 _initPort 7DE6  
          __size_of_main 01D6  
